package com.example.moviebrowser.repositoryimport com.example.moviebrowser.dataModels.TopRatedMoviesimport com.example.moviebrowser.dataSource.MoviesDataSourceimport com.example.moviebrowser.utils.ApiStatusimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.flowimport javax.inject.Injectclass DefaultMovieRepository @Inject constructor(private val dataSource: MoviesDataSource) :    MovieRepository {    override suspend fun getTopRatedMovies(): Flow<ApiStatus<List<TopRatedMovies>>> = flow{        try {            emit(ApiStatus.Loading)            val resp = dataSource.getMoviesData()            resp?.let {                emit(ApiStatus.Success(it))            }        } catch (exe: Exception) {            emit(ApiStatus.Error(exe.toString()))        }    }}