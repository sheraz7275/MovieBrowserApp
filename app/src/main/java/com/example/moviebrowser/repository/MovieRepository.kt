package com.example.moviebrowser.repositoryimport android.content.res.Resourcesimport android.provider.Settings.Global.getStringimport androidx.lifecycle.MutableLiveDataimport com.example.moviebrowser.Rimport com.example.moviebrowser.dataModels.TopRatedMoviesimport com.example.moviebrowser.network.RestApiimport com.example.moviebrowser.utils.ApiStatusimport kotlinx.coroutines.flow.MutableStateFlowimport javax.inject.Injectclass MovieRepository @Inject constructor(private val restApi: RestApi) {    val moviesList = MutableStateFlow<List<TopRatedMovies>?>(null)    val status = MutableStateFlow<String>(ApiStatus.Loading.toString())    private val API_KEY = "8dd6c8345c87851c0364e4c299299bbe"    suspend fun getTopRatedMovies() {        try {            val resp = restApi.getTopRatedMoviesListAsync(API_KEY).await()            resp.results?.let {                moviesList.value = it                status.value = ApiStatus.Success.toString()            }        } catch (exe: Exception) {            status.value = ApiStatus.Error.toString()            throw exe        }    }}